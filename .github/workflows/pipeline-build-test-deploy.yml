name: .NET CI/CD Pipeline

on:
  push:
    branches: 
      - feature/tests-cicd
  pull_request:
    branches:
      - feature/tests-cicd

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0'

    - name: Restore dependencies
      working-directory: DualJobDateAPI
      run: dotnet restore DualJobDateAPI.sln

    - name: Build
      working-directory: DualJobDateAPI
      run: dotnet build --no-restore -c Release

    - name: Cache NuGet Packages
      uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: ${{ runner.os }}-nuget-

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0'
    - name: Restore dependencies
      working-directory: DualJobDateAPI
      run: dotnet restore DualJobDateAPI.sln
    - name: List Packages 
      run: ls -R ~/.nuget/packages/reportgenerator/5.2.5/tools/net8.0
    - name: Run Tests
      working-directory: DualJobDateAPI
      run: |
        dotnet test DualJobDateAPI.sln --collect:"Xplat Code Coverage" --results-directory ./TestResults
        dotnet ~/.nuget/packages/reportgenerator/5.2.5/tools/net8.0/ReportGenerator.dll -reports:./TestResults/*/coverage.cobertura.xml -targetdir:coveragereport
      
  # build-and-push-docker:
  #   permissions:
  #     contents: read
  #     packages: write
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Convert to lowercase
  #     run: |
  #       echo "IMAGE_NAME=${IMAGE_NAME@L}" >> "${GITHUB_ENV}"
  #   - name: Login to GitHub Container Registry
  #     uses: docker/login-action@v3
  #     with:
  #       registry: ${{ env.REGISTRY }}
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}
  #   - name: Build and push Docker image
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: ./DualJobDateAPI
  #       push: true
  #       tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-develop
